image: maven:3.6-jdk-8-slim

steps:
  - build: &build
      name: build
      caches:
        - maven
      script:
        - sh pipelines/configure-maven-artifactory.sh /usr/share/maven/conf/settings.xml
        # Print contents of /usr/share/maven/conf/settings.xml for debug purposes
        - cat /usr/share/maven/conf/settings.xml
        - mvn clean deploy
          -DaltReleaseDeploymentRepository=artifactory.libs-release-local::$ARTIFACTORY_CONTEXT_URL/libs-release-local
          -DaltSnapshotDeploymentRepository=artifactory.libs-snapshot-local::$ARTIFACTORY_CONTEXT_URL/libs-snapshot-local
          -Ddeveloper.connection=scm:git:$BITBUCKET_GIT_HTTP_ORIGIN
          -Pci


pipelines:

  default:
    - step: *build
    - step:
        name: deploy test
        deployment: test
        trigger: manual
        script:
          - sh pipelines/deploy.sh

  branches:
    master:
      - step: *build
      - step:
          name: deploy test
          deployment: test
          script:
            - sh pipelines/deploy.sh
      - step:
          name: deploy production
          deployment: production
          trigger: manual
          script:
            - sh pipelines/deploy.sh

  custom:
    release:
      - step:
          name: build-and-release
          caches:
            - maven
          script:
            - sh pipelines/configure-maven-artifactory.sh /usr/share/maven/conf/settings.xml
            - sh pipelines/release.sh $BITBUCKET_GIT_HTTP_ORIGIN
          artifacts:
            # pass release version number to downstream deployment steps
            - release.version
      - step:
          name: deploy test
          deployment: test
          script:
            - VERSION=$(cat release.version)
            - sh pipelines/deploy.sh $VERSION
      - step:
          name: deploy production
          deployment: production
          trigger: manual
          script:
            - VERSION=$(cat release.version)
            - sh pipelines/deploy.sh
